{"remainingRequest":"E:\\project1\\project-allocation-student\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!E:\\project1\\project-allocation-student\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\project1\\project-allocation-student\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\project1\\project-allocation-student\\src\\views\\home\\index.vue?vue&type=template&id=5954443c&scoped=true&","dependencies":[{"path":"E:\\project1\\project-allocation-student\\src\\views\\home\\index.vue","mtime":1624300516789},{"path":"E:\\project1\\project-allocation-student\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\project1\\project-allocation-student\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"E:\\project1\\project-allocation-student\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\project1\\project-allocation-student\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}