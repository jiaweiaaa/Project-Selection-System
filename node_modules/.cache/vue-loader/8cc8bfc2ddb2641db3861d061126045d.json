{"remainingRequest":"E:\\project1\\project-allocation-student\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!E:\\project1\\project-allocation-student\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\project1\\project-allocation-student\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\project1\\project-allocation-student\\src\\views\\groups\\index.vue?vue&type=template&id=c75afb1e&scoped=true&","dependencies":[{"path":"E:\\project1\\project-allocation-student\\src\\views\\groups\\index.vue","mtime":1620822329661},{"path":"E:\\project1\\project-allocation-student\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\project1\\project-allocation-student\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"E:\\project1\\project-allocation-student\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\project1\\project-allocation-student\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}