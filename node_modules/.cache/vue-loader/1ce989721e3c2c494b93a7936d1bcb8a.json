{"remainingRequest":"E:\\project1\\project-allocation-student\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\project1\\project-allocation-student\\src\\views\\Login.vue?vue&type=style&index=0&id=042219e4&lang=scss&scoped=true&","dependencies":[{"path":"E:\\project1\\project-allocation-student\\src\\views\\Login.vue","mtime":1620822329660},{"path":"E:\\project1\\project-allocation-student\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\project1\\project-allocation-student\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"E:\\project1\\project-allocation-student\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"E:\\project1\\project-allocation-student\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\project1\\project-allocation-student\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\project1\\project-allocation-student\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQoubG9naW4tcGFnZSB7DQogICAgbWluLWhlaWdodDogMTAwJTsNCiAgICB3aWR0aDogMTAwJTsNCiAgICBoZWlnaHQ6IDEwMHZoOw0KICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7DQogICAgcGFkZGluZzogMjAwcHggNjBweDsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTsNCiAgICAubG9naW4tY29udGVudCB7DQogICAgICAgIGRpc3BsYXk6IGZsZXg7DQogICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyOw0KICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyOw0KICAgIH0NCiAgICAubG9naW4taW1hZ2Ugew0KICAgICAgICB3aWR0aDogNTAwcHg7DQogICAgICAgIG1hcmdpbi1yaWdodDogMzBweDsNCiAgICB9DQogICAgLmxvZ2luLWZvcm0tY29udGFpbmVyIHsNCiAgICAgICAgcGFkZGluZzogNDBweCA0MHB4IDYwcHggNDBweDsNCiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZlZmNlYjsNCiAgICAgICAgYm9yZGVyLXJhZGl1czogNXB4Ow0KICAgICAgICBib3gtc2hhZG93OiAxcHggMXB4IDZweCAjZDhkOGQ4ZjI7DQogICAgICAgIC5lbWFpbC1pbnB1dCwgLnBhc3N3b3JkLWlucHV0IHsNCiAgICAgICAgICAgIHdpZHRoOiAzMDBweDsNCiAgICAgICAgfQ0KICAgICAgICAubG9naW4taW5wdXQtd3JhcHBlciB7DQogICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAyMHB4Ow0KICAgICAgICB9DQogICAgICAgIC5lcnJvci1ub3RpZmljYXRpb24gew0KICAgICAgICAgICAgY29sb3I6IHJlZDsNCiAgICAgICAgICAgIG1hcmdpbi10b3A6IDEwcHg7DQogICAgICAgICAgICBwYWRkaW5nLWxlZnQ6IDVweDsNCiAgICAgICAgICAgIGZvbnQtc2l6ZTogMTJweDsNCiAgICAgICAgfQ0KICAgICAgICAubG9naW4taW5wdXQgew0KICAgICAgICB9DQogICAgICAgIC5sb2dpbi10aXRsZSB7DQogICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7DQogICAgICAgICAgICBmb250LXdlaWdodDogYm9sZDsNCiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDMwcHg7DQogICAgICAgICAgICBmb250LXNpemU6IDIwcHg7DQogICAgICAgIH0NCiAgICAgICAgLmxvZ2luLWJ1dHRvbi13cmFwcGVyIHsNCiAgICAgICAgICAgIHRleHQtYWxpZ246IHJpZ2h0Ow0KICAgICAgICB9DQogICAgICAgIC5sb2dpbi1idG4gew0KICAgICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrOw0KICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7DQogICAgICAgICAgICBwYWRkaW5nOiAxMHB4IDM1cHg7DQogICAgICAgICAgICBmb250LXNpemU6IDE0cHg7DQogICAgICAgICAgICBib3JkZXItcmFkaXVzOiA1cHg7DQogICAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7DQogICAgICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAjZmZlNTY0Ow0KICAgICAgICB9DQogICAgfQ0KfQ0K"},{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Login.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n    <div class=\"login-page\">\r\n        <div class=\"login-content\">\r\n            <div class=\"bg-container\">\r\n                <img class=\"login-image\" src=\"../assets/login_bg.jpg\" alt=\"\">\r\n            </div>\r\n            <div class=\"login-form-container\">\r\n                <div class=\"login-title\">LOG IN</div>\r\n                <div class=\"email-input-wrapper login-input-wrapper\">\r\n                    <el-input v-model=\"email\" class=\"email-input\" placeholder=\"email\" @input=\"clearError('email')\"></el-input>\r\n                    <div class=\"error-notification\" v-show=\"error.email.isShow\">{{error.email.message}}</div>\r\n                </div>\r\n                <div class=\"password-input-wrapper login-input-wrapper\">\r\n                    <el-input v-model=\"password\" class=\"password-input\" type=\"password\" placeholder=\"password\" @input=\"clearError('password')\" ></el-input>\r\n                    <div class=\"error-notification\" v-show=\"error.password.isShow\">{{error.password.message}}</div>\r\n                </div>\r\n                <div class=\"login-button-wrapper\">\r\n                    <div class=\"login-btn\" @click=\"login\">Log in</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport loginApi from '@/api/login'\r\nimport CONSTANTS from '@/utils/constants'\r\nimport cookies from 'js-cookie'\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            email: '',\r\n            password: '',\r\n            error: {\r\n                email: {\r\n                    isShow: false,\r\n                    message: 'Email required'\r\n                },\r\n                password: {\r\n                    isShow: false,\r\n                    message: 'Password required'\r\n                }\r\n            }\r\n        }\r\n    },\r\n    methods: {\r\n        login() {\r\n            let loginData = {\r\n                email: this.email,\r\n                password: this.password\r\n            }\r\n            \r\n            if (this.validateBeforeLogin()) {\r\n                loginApi.login(loginData).then(response => {\r\n    \r\n                    if (response.code == CONSTANTS.RESPONSE_CODE.SUCCESS) {\r\n                        let token = response.data.token\r\n                        // TODO\r\n                        // change localhost\r\n                        cookies.set('token', token, {domain: 'localhost'})\r\n                        loginApi.getStudentInfo().then(response => {\r\n                            cookies.set('student', response.data.student, {domain: 'localhost'})\r\n                            this.$store.dispatch('user/login', token, response.data.student)\r\n                            // TODO\r\n                            // change /admin\r\n                            this.$router.push('/groups/index')\r\n                        })\r\n                        return\r\n                    }\r\n    \r\n                    if (response.code == CONSTANTS.RESPONSE_CODE.EMAIL_NOT_EXIST) {\r\n                        this.error.email.message = 'Email not exist'\r\n                        this.error.email.isShow = true\r\n                        return\r\n                    }\r\n\r\n                    if (response.code == CONSTANTS.RESPONSE_CODE.ERROR_PASSWORD) {\r\n                        this.error.password.message = 'Passowrd not correct'\r\n                        this.error.password.isShow = true\r\n                        return\r\n                    }\r\n                })\r\n            }\r\n        },\r\n        validateBeforeLogin() {\r\n            if (this.email.trim() == '') {\r\n                this.error.email.message = 'Email cannot be empty'\r\n                this.error.email.isShow = true\r\n                return false\r\n            }\r\n\r\n            if (this.password == '') {\r\n                this.error.email.message = 'Password cannot be empty'\r\n                this.error.password.isShow = true\r\n                return false\r\n            }\r\n\r\n            return true\r\n        },\r\n        clearError(label) {\r\n            this.error[label].isShow = false\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n\r\n<style lang=\"scss\" scoped>\r\n.login-page {\r\n    min-height: 100%;\r\n    width: 100%;\r\n    height: 100vh;\r\n    box-sizing: border-box;\r\n    padding: 200px 60px;\r\n    background-color: white;\r\n    .login-content {\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n    }\r\n    .login-image {\r\n        width: 500px;\r\n        margin-right: 30px;\r\n    }\r\n    .login-form-container {\r\n        padding: 40px 40px 60px 40px;\r\n        background-color: #fefceb;\r\n        border-radius: 5px;\r\n        box-shadow: 1px 1px 6px #d8d8d8f2;\r\n        .email-input, .password-input {\r\n            width: 300px;\r\n        }\r\n        .login-input-wrapper {\r\n            margin-bottom: 20px;\r\n        }\r\n        .error-notification {\r\n            color: red;\r\n            margin-top: 10px;\r\n            padding-left: 5px;\r\n            font-size: 12px;\r\n        }\r\n        .login-input {\r\n        }\r\n        .login-title {\r\n            text-align: center;\r\n            font-weight: bold;\r\n            margin-bottom: 30px;\r\n            font-size: 20px;\r\n        }\r\n        .login-button-wrapper {\r\n            text-align: right;\r\n        }\r\n        .login-btn {\r\n            display: inline-block;\r\n            background-color: white;\r\n            padding: 10px 35px;\r\n            font-size: 14px;\r\n            border-radius: 5px;\r\n            cursor: pointer;\r\n            border: 1px solid #ffe564;\r\n        }\r\n    }\r\n}\r\n</style>"]}]}