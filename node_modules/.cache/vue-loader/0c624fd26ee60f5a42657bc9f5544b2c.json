{"remainingRequest":"E:\\project1\\project-allocation-student\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\project1\\project-allocation-student\\src\\views\\Login.vue?vue&type=style&index=0&id=26084dc2&lang=scss&scoped=true&","dependencies":[{"path":"E:\\project1\\project-allocation-student\\src\\views\\Login.vue","mtime":1624286163263},{"path":"E:\\project1\\project-allocation-student\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\project1\\project-allocation-student\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"E:\\project1\\project-allocation-student\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"E:\\project1\\project-allocation-student\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\project1\\project-allocation-student\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\project1\\project-allocation-student\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KLmxvZ2luLXBhZ2Ugew0KICAgIG1pbi1oZWlnaHQ6IDEwMCU7DQogICAgd2lkdGg6IDEwMCU7DQogICAgaGVpZ2h0OiAxMDB2aDsNCiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94Ow0KICAgIHBhZGRpbmc6IDIwMHB4IDYwcHg7DQogICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7DQogICAgLmxvZ2luLWNvbnRlbnQgew0KICAgICAgICBkaXNwbGF5OiBmbGV4Ow0KICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsNCiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjsNCiAgICB9DQogICAgLmxvZ2luLWltYWdlIHsNCiAgICAgICAgd2lkdGg6IDUwMHB4Ow0KICAgICAgICBtYXJnaW4tcmlnaHQ6IDMwcHg7DQogICAgfQ0KICAgIC5sb2dpbi1mb3JtLWNvbnRhaW5lciB7DQogICAgICAgIHBhZGRpbmc6IDQwcHggNDBweCA2MHB4IDQwcHg7DQogICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZWZjZWI7DQogICAgICAgIGJvcmRlci1yYWRpdXM6IDVweDsNCiAgICAgICAgYm94LXNoYWRvdzogMXB4IDFweCA2cHggI2Q4ZDhkOGYyOw0KICAgICAgICAuZW1haWwtaW5wdXQsIC5wYXNzd29yZC1pbnB1dCB7DQogICAgICAgICAgICB3aWR0aDogMzAwcHg7DQogICAgICAgIH0NCiAgICAgICAgLmxvZ2luLWlucHV0LXdyYXBwZXIgew0KICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMjBweDsNCiAgICAgICAgfQ0KICAgICAgICAuZXJyb3Itbm90aWZpY2F0aW9uIHsNCiAgICAgICAgICAgIGNvbG9yOiByZWQ7DQogICAgICAgICAgICBtYXJnaW4tdG9wOiAxMHB4Ow0KICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiA1cHg7DQogICAgICAgICAgICBmb250LXNpemU6IDEycHg7DQogICAgICAgIH0NCiAgICAgICAgLmxvZ2luLWlucHV0IHsNCiAgICAgICAgfQ0KICAgICAgICAubG9naW4tdGl0bGUgew0KICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyOw0KICAgICAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7DQogICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAzMHB4Ow0KICAgICAgICAgICAgZm9udC1zaXplOiAyMHB4Ow0KICAgICAgICB9DQogICAgICAgIC5sb2dpbi1idXR0b24td3JhcHBlciB7DQogICAgICAgICAgICB0ZXh0LWFsaWduOiByaWdodDsNCiAgICAgICAgfQ0KICAgICAgICAubG9naW4tYnRuIHsNCiAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jazsNCiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlOw0KICAgICAgICAgICAgcGFkZGluZzogMTBweCAzNXB4Ow0KICAgICAgICAgICAgZm9udC1zaXplOiAxNHB4Ow0KICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogNXB4Ow0KICAgICAgICAgICAgY3Vyc29yOiBwb2ludGVyOw0KICAgICAgICAgICAgYm9yZGVyOiAxcHggc29saWQgI2ZmZTU2NDsNCiAgICAgICAgfQ0KICAgIH0NCn0NCg=="},{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Login.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n    <div class=\"login-page\">\r\n        <div class=\"login-content\">\r\n            <div class=\"bg-container\">\r\n                <img class=\"login-image\" src=\"../assets/login_bg.jpg\" alt=\"\">\r\n            </div>\r\n            <div class=\"login-form-container\">\r\n                <div class=\"login-title\">LOG IN</div>\r\n                <div class=\"email-input-wrapper login-input-wrapper\">\r\n                    <el-input v-model=\"email\" autofocus @keyup.enter.native=\"login\" class=\"email-input\" placeholder=\"email\" @input=\"clearError('email')\"></el-input>\r\n                    <div class=\"error-notification\" v-show=\"error.email.isShow\">{{error.email.message}}</div>\r\n                </div>\r\n                <div class=\"password-input-wrapper login-input-wrapper\">\r\n                    <el-input v-model=\"password\" @keyup.enter.native=\"login\" class=\"password-input\" type=\"password\" show-password placeholder=\"password\" @input=\"clearError('password')\" ></el-input>\r\n                    <div class=\"error-notification\" v-show=\"error.password.isShow\">{{error.password.message}}</div>\r\n                </div>\r\n                <div class=\"login-button-wrapper\">\r\n                    <div class=\"login-btn\" @click=\"login\">Log in</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport loginApi from '@/api/login'\r\nimport CONSTANTS from '@/utils/constants'\r\nimport cookies from 'js-cookie'\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            email: '',\r\n            password: '',\r\n            error: {\r\n                email: {\r\n                    isShow: false,\r\n                    message: 'Email required'\r\n                },\r\n                password: {\r\n                    isShow: false,\r\n                    message: 'Password required'\r\n                }\r\n            }\r\n        }\r\n    },\r\n    methods: {\r\n        login() {\r\n            let loginData = {\r\n                email: this.email,\r\n                password: this.password\r\n            }\r\n            \r\n            if (this.validateBeforeLogin()) {\r\n                loginApi.login(loginData).then(response => {\r\n    \r\n                    if (response.code == CONSTANTS.RESPONSE_CODE.SUCCESS) {\r\n                        let token = response.data.token\r\n                        // TODO\r\n                        cookies.set('token', token)\r\n                        loginApi.getStudentInfo().then(response => {\r\n                            let student = response.data.student\r\n                            cookies.set('student', response.data.student)\r\n                            this.$store.dispatch('user/login', {token, student})\r\n                            // TODO\r\n                            // change /admin\r\n                            this.$router.push('/home/index')\r\n                        })\r\n                        return\r\n                    }\r\n    \r\n                    if (response.code == CONSTANTS.RESPONSE_CODE.EMAIL_NOT_EXIST) {\r\n                        this.error.email.message = 'Email not exist'\r\n                        this.error.email.isShow = true\r\n                        return\r\n                    }\r\n\r\n                    if (response.code == CONSTANTS.RESPONSE_CODE.ERROR_PASSWORD) {\r\n                        this.error.password.message = 'Passowrd not correct'\r\n                        this.error.password.isShow = true\r\n                        return\r\n                    }\r\n                })\r\n            }\r\n        },\r\n        validateBeforeLogin() {\r\n            if (this.email.trim() == '') {\r\n                this.error.email.message = 'Email cannot be empty'\r\n                this.error.email.isShow = true\r\n                return false\r\n            }\r\n\r\n            let email_reg = new RegExp(CONSTANTS.REG.EMAIL_REG)\r\n            if (!email_reg.test(this.email)) {\r\n                this.error.email.message = 'Email format error'\r\n                this.error.email.isShow = true\r\n                return false\r\n            }\r\n\r\n            if (this.password == '') {\r\n                this.error.email.message = 'Password cannot be empty'\r\n                this.error.password.isShow = true\r\n                return false\r\n            }\r\n\r\n            return true\r\n        },\r\n        clearError(label) {\r\n            this.error[label].isShow = false\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n\r\n<style lang=\"scss\" scoped>\r\n.login-page {\r\n    min-height: 100%;\r\n    width: 100%;\r\n    height: 100vh;\r\n    box-sizing: border-box;\r\n    padding: 200px 60px;\r\n    background-color: white;\r\n    .login-content {\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n    }\r\n    .login-image {\r\n        width: 500px;\r\n        margin-right: 30px;\r\n    }\r\n    .login-form-container {\r\n        padding: 40px 40px 60px 40px;\r\n        background-color: #fefceb;\r\n        border-radius: 5px;\r\n        box-shadow: 1px 1px 6px #d8d8d8f2;\r\n        .email-input, .password-input {\r\n            width: 300px;\r\n        }\r\n        .login-input-wrapper {\r\n            margin-bottom: 20px;\r\n        }\r\n        .error-notification {\r\n            color: red;\r\n            margin-top: 10px;\r\n            padding-left: 5px;\r\n            font-size: 12px;\r\n        }\r\n        .login-input {\r\n        }\r\n        .login-title {\r\n            text-align: center;\r\n            font-weight: bold;\r\n            margin-bottom: 30px;\r\n            font-size: 20px;\r\n        }\r\n        .login-button-wrapper {\r\n            text-align: right;\r\n        }\r\n        .login-btn {\r\n            display: inline-block;\r\n            background-color: white;\r\n            padding: 10px 35px;\r\n            font-size: 14px;\r\n            border-radius: 5px;\r\n            cursor: pointer;\r\n            border: 1px solid #ffe564;\r\n        }\r\n    }\r\n}\r\n</style>"]}]}